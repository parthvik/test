/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { BudgetWhereUniqueInput } from "../../budget/base/BudgetWhereUniqueInput";
import { ValidateNested, IsOptional } from "class-validator";
import { Type } from "class-transformer";
import { EducationListRelationFilter } from "../../education/base/EducationListRelationFilter";
import { ExperienceListRelationFilter } from "../../experience/base/ExperienceListRelationFilter";
import { StringFilter } from "../../util/StringFilter";
import { BooleanNullableFilter } from "../../util/BooleanNullableFilter";
import { StringNullableFilter } from "../../util/StringNullableFilter";

@InputType()
class EngineerWhereInput {
  @ApiProperty({
    required: false,
    type: () => BudgetWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => BudgetWhereUniqueInput)
  @IsOptional()
  @Field(() => BudgetWhereUniqueInput, {
    nullable: true,
  })
  budget?: BudgetWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: () => EducationListRelationFilter,
  })
  @ValidateNested()
  @Type(() => EducationListRelationFilter)
  @IsOptional()
  @Field(() => EducationListRelationFilter, {
    nullable: true,
  })
  educations?: EducationListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => ExperienceListRelationFilter,
  })
  @ValidateNested()
  @Type(() => ExperienceListRelationFilter)
  @IsOptional()
  @Field(() => ExperienceListRelationFilter, {
    nullable: true,
  })
  experiences?: ExperienceListRelationFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  id?: StringFilter;

  @ApiProperty({
    required: false,
    type: BooleanNullableFilter,
  })
  @Type(() => BooleanNullableFilter)
  @IsOptional()
  @Field(() => BooleanNullableFilter, {
    nullable: true,
  })
  isFullTime?: BooleanNullableFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  name?: StringNullableFilter;
}

export { EngineerWhereInput as EngineerWhereInput };
